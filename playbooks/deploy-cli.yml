---
- name: Ensure Kubernetes dependencies and kubernetes.core collection are installed
  hosts: localhost
  become: true
  tasks:

    - name: Check Ubuntu version
      command: lsb_release -rs
      register: ubuntu_version
      changed_when: false

    - name: Install python3-kubernetes using APT (Preferred for Ubuntu 24.04+)
      apt:
        name: python3-kubernetes
        state: present
      when: ubuntu_version.stdout | float >= 24.04

    - name: Ensure Python virtual environment exists (if APT install fails)
      command: python3 -m venv ~/.ansible-venv
      args:
        creates: ~/.ansible-venv
      when: ubuntu_version.stdout | float < 24.04

    - name: Install kubernetes Python module in virtual environment (Fallback)
      command: ~/.ansible-venv/bin/pip install kubernetes
      when: ubuntu_version.stdout | float < 24.04

    - name: Set Ansible Python interpreter to virtual environment if needed
      set_fact:
        ansible_python_interpreter: "~/.ansible-venv/bin/python"
      when: ubuntu_version.stdout | float < 24.04

    - name: Ensure required Python packages are installed
      pip:
        name:
          - kubernetes
        state: present
      environment:
        PATH: "~/.ansible-venv/bin:{{ ansible_env.PATH }}"
      when: ubuntu_version.stdout | float < 24.04

    - name: Install kubernetes.core collection
      command: ansible-galaxy collection install kubernetes.core
      changed_when: false

- name: Apply Flannel CNI using kubectl from localhost
  hosts: localhost
  tasks:
    - name: Ensure KUBECONFIG is set
      lineinfile:
        path: ~/.bashrc
        line: "export KUBECONFIG=~/.kube/config"
        create: yes

    - name: Apply Flannel CNI
      kubernetes.core.k8s:
        state: present
        src: "https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml"
